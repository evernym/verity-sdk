image: registry.gitlab.com/evernym/containers/build-verity-sdk:f5b82f46

stages:
  - test
  - package
  - doc
  - publish
  - publish-docker

variables:
  DEV_BASE_VERSION: "0.4.9"
  DEV_VERSION: '$DEV_BASE_VERSION-$CI_COMMIT_SHORT_SHA'

.java-common:
  cache:
    paths:
      - .m2/repository
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  before_script:
    - cd sdk/java-sdk/
    - mvn versions:set -DnewVersion=$DEV_VERSION

java-test:
  stage: test
  tags:
    - docker-machine
    - large
  extends:
    - .java-common
  script:
    - mvn pmd:check # Java SDK linting
    - mvn pmd:cpd-check # Java SDK linting
    - mvn test # Java SDK unit tests

java-package:
  stage: package
  tags:
    - docker-machine
    - micro
  extends:
    - .java-common
  script:
    - mvn package -DskipTests

java-doc:
  stage: doc
  tags:
    - docker-machine
    - micro
  extends:
    - .java-common
  script:
    - mvn javadoc:javadoc

java-publish:
  stage: publish
  tags:
    - docker-machine
    - micro
  extends:
    - .java-common
  script:
    - mvn --errors deploy --settings ./settings.xml -DskipTests
  when: on_success
  only:
    refs:
      - "main@evernym/verity/verity-sdk"
    changes:
      - sdk/java-sdk/**/*
      - .gitlab-ci.yml

java-release:
  stage: publish
  tags:
    - s3docs
    - docker-machine
  extends:
    - .java-common
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                        # pull version from tag name
    - gpg --batch --passphrase $OSSHR_GPG_PASSPHRASE --import $OSSRH_GPG_SIGNING_KEY # set GPG key to keyring
    - mvn versions:set -DnewVersion=$RELEASE_VERSION                                 # set version to tagged version
    - mvn clean deploy --settings ./settings.xml -DskipTests -P release              # deploy to sonatype OSSRH repo
    - mvn javadoc:javadoc                                                            # build javadoc
    - aws s3 sync doc/_build s3://developer.evernym.com/doc/java/$RELEASE_VERSION    # upload javadoc to s3
  allow_failure: true
  only:
    refs:
      - tags@evernym/verity/verity-sdk

.python-common:
  variables:
    DEV_PYPI_VERSION: '$DEV_BASE_VERSION+$CI_COMMIT_SHORT_SHA'
  before_script:
    - cd sdk/python-sdk/
    - echo "VERSION = '$DEV_PYPI_VERSION'" > verity_sdk/version.py

python-test:
  stage: test
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - make lint # Python SDK linting
    - pytest    # Python SDK unit tests

python-package:
  stage: package
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - make build-artifacts

python-doc:
  stage: doc
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - make doc-build

python-publish:
  stage: publish
  tags:
    - docker-machine
    - micro
  extends:
    - .python-common
  script:
    - pip3 install --upgrade keyrings.alt  
    - python3 setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python3 -m twine upload --verbose --repository-url $CI_SERVER_URL/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  only:
    refs:
      - "main@evernym/verity/verity-sdk"
    changes:
      - sdk/python-sdk/**/*
      - .gitlab-ci.yml

python-release:
  stage: publish
  tags:
    - s3docs
    - docker-machine
  extends:
    - .python-common
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                   # pull version from tag name
    - echo "VERSION = '$RELEASE_VERSION'" > verity_sdk/version.py               # set version to tagged version
    - echo "$RELEASE_VERSION"
    - make upload-to-pypi                                                       # upload to pypi
    - make doc-build                                                            # build doc
    - aws s3 sync doc/_build s3://developer.evernym.com/doc/python/$RELEASE_VERSION # upload javadoc to s3
  allow_failure: true
  only:
    refs:
      - tags@evernym/verity/verity-sdk

.nodejs-common:
  before_script:
    - cd sdk/nodejs-sdk/
    - npm version --no-git-tag-version $DEV_VERSION

nodejs-test:
  stage: test
  tags:
    - docker-machine
    - micro
  extends:
    - .nodejs-common
  script:
    - npm install
    - npm run lint # Node.js linting
    - npm test # Node.js testing

nodejs-doc:
  stage: doc
  tags:
    - docker-machine
    - micro
  extends:
    - .nodejs-common
  script:
    - npm install
    - npm run doc-build

nodejs-publish:
  stage: publish
  tags:
    - docker-machine
    - micro
  extends:
    - .nodejs-common
  script:
    - npm run package
    - echo "//gitlab.com/api/v4/projects/$CI_PROJECT_ID/packages/npm/:_authToken=$CI_JOB_TOKEN" > .npmrc
    - echo "@evernym:verity-sdk=https://gitlab.com/api/v4/packages/npm/" >> .npmrc
    - npm config set @evernym:verity-sdk https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/packages/npm/
    - sed -i "s/CI_PROJECT_ID/$CI_PROJECT_ID/" package.json 
    - cat .npmrc
    - cat package.json
    - npm config list
    - npm publish
#  only:
#    refs:
#      - main@evernym/verity/verity-sdk
#    changes:
#      - sdk/nodejs-sdk/**/*
#      - .gitlab-ci.yml

nodejs-release:
  stage: publish
  tags:
    - s3docs
    - docker-machine
  extends:
    - .nodejs-common
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                       # pull version from tag name
    - npm version --no-git-tag-version $RELEASE_VERSION                             # set version to tagged version
    - echo '//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}' > .npmrc            # set rc file to use auth token
    - npm install                                                                   # pre for publish
    - npm publish                                                                   # publish to npm
    - npm run doc-build                                                             # build doc
    - aws s3 sync doc/_build s3://developer.evernym.com/doc/nodejs/$RELEASE_VERSION # upload javadoc to s3
  allow_failure: true
  only:
    refs:
      - tags@evernym/verity/verity-sdk

.dotnet-common:
  before_script:
    - cd sdk/dotnet-sdk/src/


dotnet-test:
  stage: test
  tags:
    - docker-machine
    - large
  extends:
    - .dotnet-common
  script:
    - cd VeritySDK.Test
    - dotnet restore -p:Configuration=Release
    - dotnet build -c Release /warnaserror      # DotNet SDK build with warning as error
    - dotnet test                               # DotNet SDK tests

dotnet-package:
  stage: package
  tags:
    - docker-machine
    - micro
  extends:
    - .dotnet-common
  script:
    - cd VeritySDK
    - dotnet restore -p:Configuration=Release
    - dotnet build -c Release
    - dotnet pack -c Release -p:PackageVersion=$DEV_VERSION

dotnet-doc:
  stage: doc
  tags:
    - docker-machine
    - micro
  extends:
    - .dotnet-common
  script:
    - cd VeritySDK.Doc
    - dotnet restore -p:Configuration=Release
    - dotnet build -c Release -p:BuildDocToolPath=/usr/bin/docfx

dotnet-publish:
  stage: publish
  tags:
    - docker-machine
    - micro
  extends:
    - .dotnet-common
  script:
    - cd VeritySDK
    - dotnet restore -p:Configuration=Release
    - dotnet build -c Release
    - dotnet pack -c Release -p:PackageVersion=$DEV_VERSION
    - dotnet nuget add source "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet nuget push "bin/Release/*.nupkg" --source gitlab
  when: on_success
  only:
    refs:
      - main@evernym/verity/verity-sdk
    changes:
      - sdk/dotnet-sdk/**/*
      - .gitlab-ci.yml

dotnet-release:
  stage: publish
  tags:
    - s3docs
    - docker-machine
  extends:
    - .dotnet-common
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                        # pull version from tag name
    - cd VeritySDK.Doc
    - dotnet restore -p:Configuration=Release
    - dotnet build -c Release -p:BuildDocToolPath=/usr/bin/docfx
    - aws s3 sync ../../doc s3://developer.evernym.com/doc/dotnet/$RELEASE_VERSION      # upload dotnet-doc to s3
    - cd ../VeritySDK
    - dotnet restore -p:Configuration=Release
    - dotnet build -c Release
    - dotnet pack -c Release -p:PackageVersion=$RELEASE_VERSION
    - dotnet nuget push "bin/Release/*.nupkg" --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
  allow_failure: true
  only:
    refs:
      - tags@evernym/verity/verity-sdk


verity-image:
  stage: publish-docker
  tags:
    - docker-machine
    - large 
  variables:
    DOCKER_REGISTRY: "https://index.docker.io/v1/"
    DOCKER_REPOSITORY: "verity-server-dev"
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                       # pull version from tag name
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"username\":\"$DOCKER_USERNAME\",\"password\":\"$DOCKER_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/verity --dockerfile $CI_PROJECT_DIR/verity/verity.dockerfile --destination evernymdev/$DOCKER_REPOSITORY:$RELEASE_VERSION --destination evernymdev/$DOCKER_REPOSITORY:stable
  only:
    - tags@evernym/verity/verity-sdk

sdk-sample-app-image:
  stage: publish-docker
  tags:
    - docker-machine
    - large 
  variables:
    DOCKER_REGISTRY: "https://index.docker.io/v1/"
    DOCKER_REPOSITORY: "sdk-sample-app"
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export RELEASE_VERSION=`echo $CI_COMMIT_TAG | cut -c2-`                       # pull version from tag name
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"username\":\"$DOCKER_USERNAME\",\"password\":\"$DOCKER_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/samples/sdk/Dockerfile --destination evernymdev/$DOCKER_REPOSITORY:$RELEASE_VERSION --destination evernymdev/$DOCKER_REPOSITORY:stable
  only:
    - tags@evernym/verity/verity-sdk
